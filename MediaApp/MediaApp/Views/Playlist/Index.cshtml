@using MediaApp.Models.Index
@model IEnumerable<PlaylistListViewModel>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<MediaApp.Domain.User> signInManager
@inject UserManager<MediaApp.Domain.User> userManager

    <div id="container">
        <input type="text" class="form-control" id="filter" name="filter" placeholder="Search on playlist title or creator" />
        <div class="form-group">
        <button onclick="FilterOn()" id="btn" class="btn btn-primary"><i class="fas fa-search"></i></button>
    </div>

@{if (Model.Count() == 0)
    {
        <br />
        <strong>There are currently no playlist listed.</strong>
    }
    else
    {
        <table>
            <thead>
                <tr>
                    <th>
                        Title
                    </th>
                    <th>
                        Duration
                    </th>
                    <th>
                        Amount
                    </th>
                    <th>
                        Creator
                    </th>
                    <th>

                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (PlaylistListViewModel playlist in Model)
                {
                    <tr>
                        <td class="info">
                            @playlist.Title
                        </td>
                        <td class="info">
                            @playlist.Duration
                        </td>
                        <td class="info">
                            @playlist.PlaylistMedias.Count
                        </td>
                        <td class="info">
                            @playlist.User.UserName.Split('@')[0]
                            @playlist.UserId
                        </td>
                        <td class="info">
                            @if (signInManager.IsSignedIn(User))
                            {
                                <div class="dropdown">
                                    <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        <i class="fas fa-ellipsis-h"></i>
                                    </button>

                                    <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                        @if (userManager.GetUserId(User) == @playlist.User.Id || User.IsInRole("Admin"))
                                        {
                                            <a class="dropdown-item" onclick="GoToEdit(@playlist.Id)">Edit info</a>
                                            <a class="dropdown-item" onclick="GoToManageFilms(@playlist.Id)">Edit items</a>
                                            <a class="dropdown-item" onclick="GoToDelete(@playlist.Id)">Delete</a>
                                        }

                                        <a class="dropdown-item" onclick="GoToDetail(@playlist.Id)">View details</a>
                                    </div>
                                </div>
                            }
                        </td>
                    </tr>

                }
            </tbody>
        </table>

    }
}
<script src="https://kit.fontawesome.com/a6748bd2b3.js" crossorigin="anonymous"></script>
<script>
    function GoToDetail(id) {
        window.location.href = "Detail/?id=" + id;
    }
    function GoToManageFilms(id) {
        window.location.href = "ManageFilms/?id=" + id;
    }
    function FilterOn() {
        var filter = document.getElementById('filter').value
        window.location.href = "?filter=" + filter;
    }
    function GoToDelete(id) {
        window.location.href = "Delete/?id=" + id;
    }
    function GoToEdit(id) {
        window.location.href = "/Edit/?id=" + id;
    }
</script>

<style>
    table, td {
        border-bottom: 1px solid black;
    }

    .info {
        width: 20vw;
    }

    tr:hover {
        background-color: lightgray;
    }
</style>